import org.joda.time.*
import org.openhab.model.script.actions.Timer

var Timer nightLightDim
var Timer nightLightOff

rule "Night Light"
when 
    Time cron "0 0 19 * * ?"   // Every day 19:00 hours
then
    // Light 1
    sendCommand(Hue_Bulb_1_Switch, ON)
    sendCommand(Hue_Bulb_1_Color, HSBType::BLUE)
    sendCommand(Hue_Bulb_1_Dimmer, 50)
    sendCommand(Hue_Bulb_1_ColorTemperature, 0)

    // Light 2
    sendCommand(Hue_Bulb_2_Switch, ON)
    sendCommand(Hue_Bulb_2_Color, HSBType::GREEN)
    sendCommand(Hue_Bulb_2_Dimmer, 50)
    sendCommand(Hue_Bulb_2_ColorTemperature, 0)

    // Timer Dim
    if(nightLightDim!=null) {
       nightLightDim.cancel()
    }
    nightLightDim = createTimer(now.plusMinutes(60)) [|
        sendCommand(Hue_Bulb_1_Dimmer, 10)
        sendCommand(Hue_Bulb_2_Dimmer, 10)
    ]

    // Timer Turn Off
    if(nightLightOff!=null) {
        nightLightOff.cancel()
    }
    nightLightOff = createTimer(now.plusMinutes(120)) [|
        sendCommand(Hue_Bulb_1_Switch, OFF)
        sendCommand(Hue_Bulb_2_Switch, OFF)
    ]
end

var Timer wakeUpLightOff

rule "Wake Up Light"
when 
    Time cron "0 45 6 * * 1-5"   // Every weekday 6:45 hours
then
    // Light 1
    sendCommand(Hue_Bulb_1_Switch, ON)
    sendCommand(Hue_Bulb_1_Color, HSBType::BLUE)
    sendCommand(Hue_Bulb_1_Dimmer, 80)

    // Light 2
    sendCommand(Hue_Bulb_2_Switch, ON)
    sendCommand(Hue_Bulb_2_Color, HSBType::GREEN)
    sendCommand(Hue_Bulb_2_Dimmer, 80)

    // Timer
    if(wakeUpLightOff!=null) {
        wakeUpLightOff.cancel()
    }
    wakeUpLightOff = createTimer(now.plusMinutes(30)) [|
        sendCommand(Hue_Bulb_1_Switch, OFF)
        sendCommand(Hue_Bulb_2_Switch, OFF)
    ]
end
